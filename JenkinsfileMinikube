pipeline {
  agent any
  parameters {
    string(name: 'DAYTRADER3_CONTEXT_ROOT_URL', defaultValue: 'http://localhost:9080/daytrader')
  }
  stages {
    stage('Continuous Integration') {
      steps {
        sh '''
          cd dt-ejb
          /usr/local/apache-maven-3.5.2/bin/mvn clean install
          cd ../Rest
          /usr/local/apache-maven-3.5.2/bin/mvn clean install
          cd ../web
          /usr/local/apache-maven-3.5.2/bin/mvn clean install
          cd ../daytrader3-ee6
          /usr/local/apache-maven-3.5.2/bin/mvn clean verify -Pci-docker
          cd ..
        '''
      }
    }
  stage('Continuous Delivery') {
    steps {
      withCredentials([usernamePassword(credentialsId: '9d5ca727-a55b-4ec4-90aa-68ac5dc4e487', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        sh '''
          docker tag daytrader-ee6:1.0-SNAPSHOT aha04328/daytrader-ee6
          docker login -u ${USERNAME} -p ${PASSWORD}
          docker push aha04328/daytrader-ee6
        '''
      }
      sh '''
        #!/bin/bash
        if kubectl describe service wlp-daytrader-jenkins; then
          echo "Service already exists, delete first"
          kubectl delete service wlp-daytrader-jenkins
        fi
        if kubectl describe deployment wlp-daytrader-jenkins; then
          echo "Application already exists, delete first"
          kubectl delete deployment wlp-daytrader-jenkins
        fi
          kubectl run wlp-daytrader-jenkins --image=sotoiwa540/daytrader-ee6 --port=9080 --env="DAYTRADER3_CONTEXT_ROOT_URL=${DAYTRADER3_CONTEXT_ROOT_URL}"
          kubectl expose deployment wlp-daytrader-jenkins --type=NodePort
          minikube service wlp-daytrader-jenkins --url
      '''
      }
    }
  }
}
